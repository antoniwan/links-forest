---
import { userConfig } from '../config/user.config';
import { themeConfig } from '../config/theme.config';
import type { ThemeName } from '../data/theme.types';
import { ThemeCycler } from '../components/ThemeCycler';
import { ProfilePicture } from '../components/ProfilePicture';
import { LinkCard } from '../components/LinkCard';
import { SocialIcons } from '../components/SocialIcons';
import { ThemeTransitionWrapper } from '../components/ThemeTransitionWrapper';
import { dataLogger } from '../utils/logger';

const { profile, theme, links, social } = userConfig;
const currentTheme = themeConfig[theme.active];

// Log the current theme
dataLogger('Layout initialized with theme:', theme.active);
---

<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<title>{profile.name} - LinkForest</title>
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<link rel="preconnect" href="https://fonts.googleapis.com">
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
		<link href="https://fonts.googleapis.com/css2?family=Bebas+Neue&family=Cormorant+Garamond:wght@400;500;600;700&family=Roboto+Mono:wght@400;500;600&family=Montserrat:wght@400;500;600;700&family=Cinzel:wght@400;500;600;700&family=Playfair+Display:wght@400;500;600;700&family=Quicksand:wght@400;500;600;700&family=EB+Garamond:wght@400;500;600;700&family=Raleway:wght@400;500;600;700&family=Lora:wght@400;500;600;700&display=swap" rel="stylesheet">
	</head>
	<body class={`${currentTheme.colors.background} ${currentTheme.colors.text} ${currentTheme.styles.font} min-h-screen`}>
		<!-- ThemeCycler will only be active in development mode -->
		<ThemeCycler client:load />
		<ThemeTransitionWrapper client:load>
			<div class="max-w-xl mx-auto px-4 pt-16 pb-12">
				<header class="flex justify-between items-center mb-8">
					<div class="flex items-center gap-4">
						<ProfilePicture 
							client:load
							name={profile.name}
							image={profile.image}
							themeId={theme.active}
						/>
						<div>
							<h1 class="text-2xl font-bold">{profile.name}</h1>
							<p class="text-gray-400">{profile.subtitle}</p>
						</div>
					</div>
				</header>

				<main class="flex flex-col gap-8">
					{links.map((link) => (
						<LinkCard
							client:load
							href={link.url}
							title={link.title}
							description={link.description}
							accentColor={currentTheme.colors.accent}
						/>
					))}
				</main>

				<footer class="mt-8">
					<SocialIcons 
						client:load
						socialLinks={social}
					/>
				</footer>
			</div>
		</ThemeTransitionWrapper>

		<script>
			/** @type {import('../data/theme.types').ThemeName} */
			const ThemeName = {
				builder: 'builder',
				wolf: 'wolf',
				mystic: 'mystic',
				dragon: 'dragon',
				artist: 'artist',
				warrior: 'warrior',
				healer: 'healer',
				alchemist: 'alchemist',
				strategist: 'strategist',
				steward: 'steward'
			};

			// Listen for theme changes
			window.addEventListener('theme-change', (event) => {
				const customEvent = event as CustomEvent<{ theme: keyof typeof ThemeName }>;
				const theme = customEvent.detail.theme;
				const themeConfig = {
					builder: { 
						background: 'bg-stone-900', 
						text: 'text-white',
						font: 'font-builder',
						description: 'Creation, systems, form'
					},
					wolf: { 
						background: 'bg-gray-900', 
						text: 'text-white',
						font: 'font-wolf',
						description: 'Instinct, loyalty, protection'
					},
					mystic: { 
						background: 'bg-purple-900', 
						text: 'text-white',
						font: 'font-mystic',
						description: 'Spirituality, vision, cosmic threads'
					},
					dragon: { 
						background: 'bg-red-900', 
						text: 'text-white',
						font: 'font-dragon',
						description: 'Power, force, will'
					},
					artist: { 
						background: 'bg-pink-900', 
						text: 'text-white',
						font: 'font-artist',
						description: 'Expression, creativity, truth'
					},
					warrior: { 
						background: 'bg-slate-900', 
						text: 'text-white',
						font: 'font-warrior',
						description: 'Action, discipline, focus'
					},
					healer: { 
						background: 'bg-emerald-900', 
						text: 'text-white',
						font: 'font-healer',
						description: 'Regeneration, soothing, connection'
					},
					alchemist: { 
						background: 'bg-violet-900', 
						text: 'text-white',
						font: 'font-alchemist',
						description: 'Transformation, elements, ritual'
					},
					strategist: { 
						background: 'bg-blue-900', 
						text: 'text-white',
						font: 'font-strategist',
						description: 'Mind, planning, clarity'
					},
					steward: { 
						background: 'bg-green-900', 
						text: 'text-white',
						font: 'font-steward',
						description: 'Legacy, care, generational vision'
					}
				} as Record<keyof typeof ThemeName, { background: string; text: string; font: string; description: string }>;
				
				const newTheme = themeConfig[theme];
				if (newTheme) {
					document.body.className = `${newTheme.background} ${newTheme.text} ${newTheme.font} min-h-screen`;
					console.log(`%cTheme changed to: ${theme}`, 'color: #4CAF50; font-weight: bold;');
					console.log(`%c${newTheme.description}`, 'color: #9E9E9E; font-style: italic;');
				}
			});
		</script>
	</body>
</html>

<style>
	html,
	body {
		margin: 0;
		width: 100%;
		height: 100%;
	}
</style>
