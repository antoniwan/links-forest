---
import { userConfig } from '../config/user.config';

const { profile, links, social } = userConfig;

// Get the first two links for the signature
const signatureLinks = links.slice(0, 2);

// Get email from social links if available
const emailLink = social.find(link => link.platform === 'email');
const email = emailLink?.url.replace('mailto:', '') || '';

// Generate UTM parameters for tracking
const utmParams = 'utm_source=email&utm_medium=signature&utm_campaign=PersonalEmail2025';

// Generate initial signature HTML
const initialSignature = `
<strong>${profile.name}</strong><br>
<span style="font-size: 80%;">${profile.subtitle}</span><br>
${signatureLinks.map((link, index) => 
    `<a href="${link.url}?${utmParams}" target="_blank">üåê ${link.url.replace(/^https?:\/\//, '')}</a>${index < signatureLinks.length - 1 ? ' | ' : ''}`
).join('')}<br>
${email ? `üì¨ ${email}` : ''}
`.trim();
---

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Email Signature - {profile.name}</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            line-height: 1.6;
            margin: 0;
            padding: 20px;
            background: #f5f5f5;
        }
        .signature-container {
            max-width: 800px;
            margin: 0 auto;
            background: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        .editor-container {
            display: flex;
            flex-direction: column;
            gap: 20px;
            margin: 20px 0;
        }
        .editor-section {
            display: flex;
            flex-direction: column;
        }
        .editor-section h3 {
            margin: 0 0 10px 0;
        }
        .html-editor {
            width: 100%;
            height: 150px;
            font-family: 'Courier New', monospace;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            resize: vertical;
        }
        .signature-preview {
            border: 1px solid #ddd;
            padding: 20px;
            background: white;
            min-height: 100px;
        }
        .button-group {
            display: flex;
            gap: 10px;
            margin: 20px 0;
        }
        .button {
            background: #4CAF50;
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 4px;
            cursor: pointer;
            font-size: 16px;
            transition: background-color 0.2s;
        }
        .button:hover {
            background: #45a049;
        }
        .button.secondary {
            background: #2196F3;
        }
        .button.secondary:hover {
            background: #1976D2;
        }
        .instructions {
            margin-top: 20px;
            padding: 15px;
            background: #f8f9fa;
            border-radius: 4px;
        }
        .toast {
            position: fixed;
            bottom: 20px;
            right: 20px;
            padding: 12px 24px;
            background: #333;
            color: white;
            border-radius: 4px;
            opacity: 0;
            transition: opacity 0.3s;
            z-index: 1000;
        }
        .toast.show {
            opacity: 1;
        }
        .toast.error {
            background: #f44336;
        }
        .toast.success {
            background: #4CAF50;
        }
        @media (max-width: 768px) {
            .editor-container {
                gap: 15px;
            }
        }
    </style>
</head>
<body>
    <div class="signature-container">
        <h1>Email Signature Generator</h1>
        
        <div class="editor-container">
            <div class="editor-section">
                <h3>HTML Editor</h3>
                <textarea 
                    id="htmlEditor" 
                    class="html-editor" 
                    spellcheck="false"
                >{initialSignature}</textarea>
            </div>
            <div class="editor-section">
                <h3>Preview</h3>
                <div id="signature" class="signature-preview"></div>
            </div>
        </div>

        <div class="button-group">
            <button class="button" onclick="copySignature()">Copy Signature</button>
            <button class="button secondary" onclick="resetSignature()">Reset to Default</button>
        </div>

        <div class="instructions">
            <h3>Instructions:</h3>
            <ol>
                <li>Edit the HTML in the editor to customize your signature</li>
                <li>See the preview update in real-time</li>
                <li>Click "Copy Signature" to copy the HTML</li>
                <li>Paste the signature into your email client's HTML editor</li>
                <li>Save your signature</li>
            </ol>
        </div>
    </div>

    <div id="toast" class="toast"></div>

    <script>
        const htmlEditor = document.getElementById('htmlEditor') as HTMLTextAreaElement;
        const signature = document.getElementById('signature') as HTMLDivElement;
        const toast = document.getElementById('toast') as HTMLDivElement;
        
        if (!htmlEditor || !signature || !toast) throw new Error('Required elements not found');

        // Initial preview
        updatePreview();

        // Update preview on editor change
        htmlEditor.addEventListener('input', updatePreview);

        function updatePreview() {
            signature.innerHTML = htmlEditor.value;
        }

        function showToast(message: string, type: 'success' | 'error' = 'success') {
            toast.textContent = message;
            toast.className = `toast ${type}`;
            toast.classList.add('show');
            
            setTimeout(() => {
                toast.classList.remove('show');
            }, 3000);
        }

        async function copySignature() {
            try {
                await navigator.clipboard.writeText(htmlEditor.value);
                showToast('Signature copied to clipboard!');
            } catch (err) {
                showToast('Failed to copy signature. Please try again.', 'error');
                console.error('Copy failed:', err);
            }
        }

        function resetSignature() {
            htmlEditor.value = `{initialSignature}`;
            updatePreview();
            showToast('Signature reset to default');
        }
    </script>
</body>
</html> 